[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "vocexcel"
version = "0.4.0"
description = """Another Excel to RDF converter for SKOS vocabs, \
  but one that includes profile-based validation of results."""
repository = "https://github.com/nfdi4cat/voc4cat-tool/"
authors = [
  "Peter Philips <peter.philips@surroundaustralia.com>",
  "David Linke <david.linke@catalysis.de>",
  "Jamie Feiss <jamie.feiss@surroundaustralia.com>",
]
maintainers = [
  "David Linke <david.linke@catalysis.de>",
]

classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Environment :: Console",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = "^3.8"
openpyxl = "^3.0.9"
rdflib = "^6.1.1"
pydantic = "^1.9.0"
pyshacl = "^0.18.1"
dateutils = "^0.6.12"
colorama = "^0.4.4"
Pillow = "^9.1.0"
pytest = "^7.1.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.1"
black = "^23.0.1"
coverage = "^7.2.1"
isort = "^5.12.0"

[tool.poetry.scripts]
vocexcel = "vocexcel.convert:main"

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.pylint.format]
max-line-length = "88"

[tool.pytest.ini_options]
# pytest config: https://docs.pytest.org/en/stable/customize.html

# Sets directories to be searched for tests. Avoids picking up
# undesired tests by accident.
testpaths = [
  "tests",
 ]

# Directories that are not visited by pytest collector:
norecursedirs = "dist build .tox .git .cache __pycache__ .venv"

addopts = "--strict-markers --strict-config --tb=short"

[tool.coverage.run]
# https://coverage.readthedocs.io/en/latest/config.html
parallel = true
branch = true
source = ["vocexcel"]

[tool.coverage.paths]
# Specify where coverage should look for source files.
source = [
    "src",
    "**/site-packages", # for not using tox
    # ".tox/**/site-packages",
]

[tool.coverage.report]
# Show in report which lines are not covered
show_missing = false
# Any line of the source code that matches one of these regexes is excluded
# from being reported as missing.
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    "return NotImplemented",
    "if __name__ == .__main__.:",
]

[tool.coverage.html]
# Directory where to write the HTML report files.
directory = ".htmlcov"
title = "vocexcel coverage report"
